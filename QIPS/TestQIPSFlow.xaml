<Activity mc:Ignorable="sap sap2010" x:Class="TestQIPSFlow" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1331,1543" sap2010:WorkflowViewState.IdRef="TestQIPSFlow_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow is for testing the qips related xaml executions." DisplayName="TestQIPSFlow" sap:VirtualizedContainerService.HintSize="530,1478" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="qipsApplicationFullPath" />
      <Variable x:TypeArguments="x:String" Name="qipsSwitcherDBSelectionNonProd" />
      <Variable x:TypeArguments="x:String" Name="qipsDBName" />
      <Variable x:TypeArguments="x:String" Name="qipsUserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="qipsPassword" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtTestInput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign - Input for testing" sap:VirtualizedContainerService.HintSize="468,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[qipsApplicationFullPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\java\QIPS_JDK\QIPS_Switcher.bat</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[qipsSwitcherDBSelectionNonProd]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">5</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[qipsDBName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">dev</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[qipsUserName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">rpaQIPSBotNP</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="ss:SecureString">[qipsPassword]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="ss:SecureString">[new system.Net.NetworkCredential("","svco15Df2017ecm").SecurePassword]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtTestInput]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="468,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Input" WorkbookPath="Data\Input\QIPS_TestInput.xlsx" />
    <ui:BuildDataTable DataTable="[dtOutput]" DisplayName="Build Data Table  - output record numbers" sap:VirtualizedContainerService.HintSize="468,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;RecordNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSLaunch workflow" sap:VirtualizedContainerService.HintSize="468,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="QIPS\QIPSLaunch.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_LaunchTimeout">45000</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_BotEnviorment">Dev</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_qipsSwitcherDBSelection">[qipsSwitcherDBSelectionNonProd]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSLogin workflow" sap:VirtualizedContainerService.HintSize="468,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="QIPS\QIPSLogin.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Username">[qipsUserName]</InArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="in_Password">[qipsPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DatabaseName">[qipsDBName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_Timeout">45000</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_HomePageWaitTimeSeconds">30</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SelectMenu workflow" sap:VirtualizedContainerService.HintSize="468,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="QIPS\QIPSSelectLeaseInquiry.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="468,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,160" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="354,52" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="429,1242" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="arrVIN" />
                  <Variable x:TypeArguments="x:String" Name="recordNumber" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSClearRecord workflow" sap:VirtualizedContainerService.HintSize="367,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="QIPS\QIPSClearRecord.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSDataEntry workflow" sap:VirtualizedContainerService.HintSize="367,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="QIPS\QIPSDataEntry.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ClientID">[row("ClientID").toString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_IssueDate">[row("IssueDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_AgencyName">[row("AgencyName").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PhoneNumber">[row("PhoneNumber").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PhExtention">[row("PhExtention").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_AgentName">[row("AgentName").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_AgentEmail">[row("AgentEmail").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_EffectiveDate">[row("EffectiveDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ExpirationDate">[row("ExpirationDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Carrier">[row("Carrier").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PolicyNumber">[row("PolicyNumber").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PropertyLimit">[row("PropertyLimit").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_LiabilityLimit">[row("LiabilityLimit").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CompDed">[row("CompDed").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CollisionDed">[row("CollisionDed").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitEffectiveDate">[row("SplitEffectiveDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitExpirationDate">[row("SplitExpirationDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitPolicyCarrierName">[row("SplitPolicyCarrierName").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitPolicyNumber">[row("SplitPolicyNumber").ToString]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSDataEntryCheckBoxes workflow" sap:VirtualizedContainerService.HintSize="367,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="QIPS\QIPSDataEntryCheckBoxes.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_Theft">[Convert.ToBoolean(row("Theft"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_LossPayee">[Convert.ToBoolean(row("LossPayee"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_AdditionalInsured">[Convert.ToBoolean(row("AdditionalInsured"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_AOIA">[Convert.ToBoolean(row("AOIA"))]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Save record before VIN entry to catch any validation errors in the data entered" DisplayName="Invoke QIPSSaveRecord workflow" sap:VirtualizedContainerService.HintSize="347.2,157.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="QIPS\QIPSSaveRecord.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_RecordNumber">[recordNumber]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Assign sap:VirtualizedContainerService.HintSize="338,63.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrVIN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[row("VIN").ToString.Split(",".ToCharArray)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="338,63.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrVIN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[arrVIN.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSEnterVIN workflow" sap:VirtualizedContainerService.HintSize="338,115.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="QIPS\QIPSEnterVIN.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_arrVINNumbers">[arrVIN]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSSaveRecord workflow" sap:VirtualizedContainerService.HintSize="338,115.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="QIPS\QIPSSaveRecord.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_RecordNumber">[recordNumber]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{recordNumber}]" DataTable="[dtOutput]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,25.3333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="433,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[exception.Message + &quot; At source &quot;+exception.Source]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through test input data for multiple documents and create QIPS record for one document after other. &#xA;This is for testing only. Loop can be removed or modified according to the project achitecture." DataTable="[dtTestInput]" DisplayName="For Each Input document" sap:VirtualizedContainerService.HintSize="468,373" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,184" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,78" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="arrVIN" />
                  <Variable x:TypeArguments="x:String" Name="recordNumber" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSClearRecord workflow" sap:VirtualizedContainerService.HintSize="337.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="QIPS\QIPSClearRecord.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSDataEntry workflow" sap:VirtualizedContainerService.HintSize="337.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="QIPS\QIPSDataEntry.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ClientID">[row("ClientID").toString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_IssueDate">[row("IssueDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_AgencyName">[row("AgencyName").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PhoneNumber">[row("PhoneNumber").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PhExtention">[row("PhExtention").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_AgentName">[row("AgentName").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_AgentEmail">[row("AgentEmail").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_EffectiveDate">[row("EffectiveDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ExpirationDate">[row("ExpirationDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Carrier">[row("Carrier").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PolicyNumber">[row("PolicyNumber").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PropertyLimit">[row("PropertyLimit").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_LiabilityLimit">[row("LiabilityLimit").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CompDed">[row("CompDed").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CollisionDed">[row("CollisionDed").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitEffectiveDate">[row("SplitEffectiveDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitExpirationDate">[row("SplitExpirationDate").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitPolicyCarrierName">[row("SplitPolicyCarrierName").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_SplitPolicyNumber">[row("SplitPolicyNumber").ToString]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSDataEntryCheckBoxes workflow" sap:VirtualizedContainerService.HintSize="337.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="QIPS\QIPSDataEntryCheckBoxes.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_Theft">[Convert.ToBoolean(row("Theft"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_LossPayee">[Convert.ToBoolean(row("LossPayee"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_AdditionalInsured">[Convert.ToBoolean(row("AdditionalInsured"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_AOIA">[Convert.ToBoolean(row("AOIA"))]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Save record before VIN entry to catch any validation errors in the data entered" DisplayName="Invoke QIPSSaveRecord workflow" sap:VirtualizedContainerService.HintSize="338,160.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="QIPS\QIPSSaveRecord.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_RecordNumber">[recordNumber]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Assign sap:VirtualizedContainerService.HintSize="338,63.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrVIN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[row("VIN").ToString.Split(",".ToCharArray)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="338,63.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrVIN]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[arrVIN.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSEnterVIN workflow" sap:VirtualizedContainerService.HintSize="338,115.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="QIPS\QIPSEnterVIN.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_arrVINNumbers">[arrVIN]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke QIPSSaveRecord workflow" sap:VirtualizedContainerService.HintSize="338,115.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="QIPS\QIPSSaveRecord.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_QIPSApplicationFullPath">[qipsApplicationFullPath]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_RecordNumber">[recordNumber]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{recordNumber}]" DataTable="[dtOutput]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,25.3333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[exception.Message + &quot; At source &quot;+exception.Source]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:AppendRange DataTable="[dtOutput]" DisplayName="Append Range Workbook" sap:VirtualizedContainerService.HintSize="468,116" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Output" WorkbookPath="Data\Input\QIPS_TestInput.xlsx" />
  </Sequence>
</Activity>